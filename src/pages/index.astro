---
import Layout from '../layouts/Layout.astro';
import LazySearchClient from '../components/LazySearchClient';
import { getAllSrefs, buildSearchIndex, getSrefCount } from '../lib/srefs';
import { getImage } from 'astro:assets';
import { toCdnUrl } from '../lib/cdn-utils';

const srefs = await getAllSrefs();

// Get all images dynamically using Vite's glob import
const imageModules = import.meta.glob('/src/data/srefs/*/images/*', { eager: true });

// Process cover images for the search index
const searchIndexWithImages = await Promise.all(
  srefs.map(async (sref) => {
    // Check if sref is new (created within last 7 days)
    const isNew = sref.created ? 
      (Date.now() - new Date(sref.created).getTime()) < (7 * 24 * 60 * 60 * 1000) : 
      false;

    const searchItem = {
      id: sref.id,
      title: sref.title,
      description: sref.description || '',
      tags: sref.tags,
      searchText: `${sref.id} ${sref.title} ${sref.description || ''} ${sref.tags.join(' ')}`.toLowerCase(),
      coverImageUrl: '',
      path: sref.path,
      created: sref.created,
      isNew,
    };

    // Process cover image if available
    if (sref.coverImagePath) {
      try {
        // Find the matching imported image module
        const imageKey = `/src/${sref.coverImagePath.replace('./data/', 'data/')}`;
        const imageModule = imageModules[imageKey];
        
        if (imageModule?.default) {
          // Create thumbnail for search results (400x300 for 4:3 aspect ratio)
          const optimized = await getImage({
            src: imageModule.default,
            width: 400,
            height: 300,
            format: 'avif',
            quality: 80,
          });
          searchItem.coverImageUrl = toCdnUrl(optimized.src);
        }
      } catch (error) {
        console.warn(`Could not process cover image for sref ${sref.id}:`, error);
      }
    }

    return searchItem;
  })
);

const srefCount = await getSrefCount();
---

<Layout title="Midjourney Sref Gallery">
  <!-- Hero Section -->
  <div class="relative mb-16 text-center">
    <div class="mb-8">
      <div class="relative inline-block">
        <h1 class="text-5xl md:text-7xl font-extrabold mb-6 leading-[1.05] tracking-tight">
          <span class="bg-gradient-to-r from-indigo-500 via-purple-500 to-pink-500 dark:from-indigo-300 dark:via-purple-300 dark:to-pink-300 bg-clip-text text-transparent block drop-shadow-[0_1px_6px_rgba(0,0,0,0.35)]">Style Reference</span>
          <span class="bg-gradient-to-r from-sky-500 via-cyan-500 to-emerald-500 dark:from-sky-300 dark:via-cyan-300 dark:to-emerald-300 bg-clip-text text-transparent block drop-shadow-[0_1px_6px_rgba(0,0,0,0.35)]">Gallery</span>
        </h1>
      </div>
      <div class="max-w-2xl mx-auto">
        <p class="text-xl text-gray-700 dark:text-gray-300 leading-relaxed mb-8">
          Discover, browse, and collect 
          <span class="font-semibold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
            Midjourney style references
          </span>. 
          Each sref unlocks unique artistic possibilities for your AI creations.
        </p>
        <div class="mb-8">
          <div class="inline-flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-indigo-900/30 dark:to-purple-900/30 rounded-full border border-indigo-200/60 dark:border-indigo-500/30">
            <svg class="w-5 h-5 text-indigo-600 dark:text-indigo-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
            <span class="text-sm font-medium text-indigo-900 dark:text-indigo-200">
              {srefCount.toLocaleString()} style references available
            </span>
          </div>
        </div>
        <div class="flex items-center justify-center gap-3">
          <a href="#explore" class="btn transition shadow-md hover:shadow-lg hover:-translate-y-0.5 dark:!bg-slate-900/90 dark:!text-slate-200 dark:!border-white/30 dark:hover:!bg-slate-900/95 dark:hover:!text-slate-100 dark:hover:ring-2 dark:hover:ring-indigo-400/60 dark:hover:ring-offset-2 dark:hover:ring-offset-slate-950 dark:hover:drop-shadow-[0_0_16px_rgba(99,102,241,0.28)]">Explore gallery</a>
          <a href={import.meta.env.BASE_URL + 'about'} class="inline-flex items-center text-sm font-medium text-indigo-600 dark:text-indigo-400 hover:underline">Learn more</a>
        </div>
      </div>
    </div>
    
    <!-- Decorative Elements -->
    <div class="absolute top-4 left-4 w-20 h-20 bg-gradient-to-br from-indigo-400/20 to-purple-400/20 rounded-full blur-xl"></div>
    <div class="absolute top-16 right-8 w-32 h-32 bg-gradient-to-br from-pink-400/20 to-orange-400/20 rounded-full blur-xl"></div>
    <div class="absolute bottom-8 left-1/3 w-24 h-24 bg-gradient-to-br from-blue-400/20 to-cyan-400/20 rounded-full blur-xl"></div>
  </div>

  <div id="explore"></div>
  <LazySearchClient client:load items={searchIndexWithImages} />
</Layout>
