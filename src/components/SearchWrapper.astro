---
import type { SearchableItem } from '../lib/types';

export interface Props {
  searchIndex: SearchableItem[];
}

const { searchIndex } = Astro.props;
---

<div id="search-container" data-search-index={JSON.stringify(searchIndex)}>
  <div id="search-component"></div>
  <div id="search-results" class="mt-8"></div>
</div>

<script>
  import Search from './Search';
  import React from 'react';
  import ReactDOM from 'react-dom/client';

  const container = document.getElementById('search-container');
  const searchComponent = document.getElementById('search-component');
  const resultsContainer = document.getElementById('search-results');
  
  if (container && searchComponent && resultsContainer) {
    const searchIndex = JSON.parse(container.dataset.searchIndex || '[]');
    const originalHTML = resultsContainer.innerHTML;
    
    const root = ReactDOM.createRoot(searchComponent);
    
    const handleResults = (results: any[]) => {
      if (results.length === 0) {
        resultsContainer.innerHTML = '<p class="text-center text-gray-500 py-8">No matching srefs found</p>';
      } else {
        const cards = results.map(item => `
          <article class="group relative bg-white rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-shadow duration-300">
            <a href="${item.path}" class="block">
              <div class="aspect-[4/3] overflow-hidden bg-gray-100">
                <img
                  src="${item.coverImageUrl}"
                  alt="${item.title}"
                  loading="lazy"
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                />
              </div>
              <div class="p-4">
                <div class="flex items-start justify-between gap-2 mb-2">
                  <h3 class="text-lg font-semibold text-gray-900 group-hover:text-blue-600 transition-colors">
                    ${item.title}
                  </h3>
                  <code class="text-xs text-gray-500 font-mono bg-gray-100 px-2 py-1 rounded">
                    ${item.id}
                  </code>
                </div>
                ${item.description ? `
                  <p class="text-sm text-gray-600 mb-3 line-clamp-2">
                    ${item.description}
                  </p>
                ` : ''}
                <div class="flex flex-wrap gap-1">
                  ${item.tags.map((tag: string) => `
                    <span class="inline-block px-2 py-1 text-xs font-medium text-gray-700 bg-gray-100 rounded-full">
                      ${tag}
                    </span>
                  `).join('')}
                </div>
              </div>
            </a>
          </article>
        `).join('');
        
        resultsContainer.innerHTML = `
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            ${cards}
          </div>
        `;
      }
    };
    
    root.render(React.createElement(Search, {
      items: searchIndex,
      onResults: handleResults
    }));
  }
</script>