---
export interface Props {
  id: string;
  title: string;
  description?: string;
  tags: string[];
  coverImageUrl: string;
  path: string;
}

const { id, title, description, tags, coverImageUrl, path } = Astro.props;
---

<article class="group relative bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm rounded-lg overflow-hidden shadow-md hover:shadow-xl transition-shadow duration-300">
  <a href={path} class="block">
    <div class="aspect-[4/3] overflow-hidden bg-gray-100">
      <img
        src={coverImageUrl}
        alt={title}
        loading="lazy"
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      />
    </div>
    <div class="p-4">
      <div class="flex items-start justify-between gap-2 mb-2">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
          {title}
        </h3>
        <code class="text-xs text-gray-500 dark:text-gray-400 font-mono bg-gray-200/60 dark:bg-gray-600/60 px-2 py-1 rounded">
          {id}
        </code>
      </div>
      {description && (
        <p class="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-2">
          {description}
        </p>
      )}
      <div class="flex flex-wrap gap-1">
        {tags.map((tag) => (
          <span class="inline-block px-2 py-1 text-xs font-medium text-gray-600 dark:text-gray-300 bg-gray-200/50 dark:bg-gray-600/50 rounded-full">
            {tag}
          </span>
        ))}
      </div>
    </div>
  </a>
</article>